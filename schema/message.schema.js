var mongoose = require("mongoose");
Schema = mongoose.Schema;
var MESSAGE_SCHEMA = {};
MESSAGE_SCHEMA.MESSAGE = {
	type:String,//0-text,1-image,2-video,3-audio,4-link,5,contact,6-document if(group) create a new group,7-add a new group memeber,8-change a group image,9-new message ,11-change as admin,12-exit group,13- change timer,14 - location,20 -document if(group),21-missed call
	from: { type: Schema.ObjectId, ref: 'users',required: true	},
	to:{ type: Schema.ObjectId, ref: 'users',required: true	},
	createdTo:{ type: Schema.ObjectId, ref: 'users'},
	replyId:{ type: Schema.ObjectId, ref: 'message'	},
	reply_type:String,
	callId:{ type: Schema.ObjectId, ref: 'calls'},
	call_type:String,
	call_status:Number,
	timestamp:Number,
	time_to_deliever:Number,
	time_to_seen:Number,
	payload:String,
	filesize:Number,
	thumbnail:String,
	original_filename:String,
	numPages:Number,
	thumbnail_data:String,
	contact_name:String,
	contact_details:{
		phone_number :[],
		email : [],
		address:[],
		im:[],
		organisation:[],
		name:[],
	},
	reply_details:{
		_id:false,
		recordId:{ type: Schema.ObjectId},
		from :{ type: Schema.ObjectId, ref: 'users'},
		reply_type:String,
		message:String,
		filesize:Number,
		thumbnail:String,
		original_filename:String,
		numPages:Number,
		thumbnail_data:String,
		contact_name:String,
		contact_details:{
			phone_number :[],
			email : [],
			address:[],
			im:[],
			organisation:[],
			name:[],
		},
		id:Number,
		doc_id:String,
		width:Number,
		height:Number,
		audio_type:String,
		link_details:{
			title:String,
			description:String,
			thumbnail_data:String,
			image:String,
			url:String,
			host:String,
		},
	},
	createdTomsisdn:String,
	duration:String,
	id:Number,
	doc_id:String,
	width:Number,
	height:Number,
	audio_type:String,
	link_details:{
		title:String,
		description:String,
		thumbnail_data:String,
		image:String,
		url:String,
		host:String,
	},
	status:String,// status: 1-new, 2-viewed, 3-deleted
	message_status:String,// message_status: 1-Sent, 2-Delivered, 3-Read 
	convId:{ type: Schema.ObjectId, ref: 'rooms', required: true},
	star:[{ type: Schema.ObjectId, ref: 'users' }],
	removed:[{ type: Schema.ObjectId, ref: 'users' }],
	cleared:[{ type: Schema.ObjectId, ref: 'users' }],
	incognito_timer_mode:String,
	secret_type:String,
	incognitoId:String,
	incognito_timer:Number,
	incognito_user:{ type: Schema.ObjectId, ref: 'users' },
	blocked:String,
	is_deleted_everyone:{type: Number, default: 0},
	contact_id: { type: Schema.ObjectId, ref: 'users' },
	contact_profile:String
};
module.exports = MESSAGE_SCHEMA;
